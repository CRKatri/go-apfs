// Code generated by "stringer -type=omapValFlag,omapSnapshotFlag,omapFlag -output omap_string.go"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OMAP_VAL_DELETED-1]
	_ = x[OMAP_VAL_SAVED-2]
	_ = x[OMAP_VAL_ENCRYPTED-4]
	_ = x[OMAP_VAL_NOHEADER-8]
	_ = x[OMAP_VAL_CRYPTO_GENERATION-16]
}

const (
	_omapValFlag_name_0 = "OMAP_VAL_DELETEDOMAP_VAL_SAVED"
	_omapValFlag_name_1 = "OMAP_VAL_ENCRYPTED"
	_omapValFlag_name_2 = "OMAP_VAL_NOHEADER"
	_omapValFlag_name_3 = "OMAP_VAL_CRYPTO_GENERATION"
)

var (
	_omapValFlag_index_0 = [...]uint8{0, 16, 30}
)

func (i omapValFlag) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _omapValFlag_name_0[_omapValFlag_index_0[i]:_omapValFlag_index_0[i+1]]
	case i == 4:
		return _omapValFlag_name_1
	case i == 8:
		return _omapValFlag_name_2
	case i == 16:
		return _omapValFlag_name_3
	default:
		return "omapValFlag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OMAP_SNAPSHOT_DELETED-1]
	_ = x[OMAP_SNAPSHOT_REVERTED-2]
}

const _omapSnapshotFlag_name = "OMAP_SNAPSHOT_DELETEDOMAP_SNAPSHOT_REVERTED"

var _omapSnapshotFlag_index = [...]uint8{0, 21, 43}

func (i omapSnapshotFlag) String() string {
	i -= 1
	if i >= omapSnapshotFlag(len(_omapSnapshotFlag_index)-1) {
		return "omapSnapshotFlag(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _omapSnapshotFlag_name[_omapSnapshotFlag_index[i]:_omapSnapshotFlag_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OMAP_MANUALLY_MANAGED-1]
	_ = x[OMAP_ENCRYPTING-2]
	_ = x[OMAP_DECRYPTING-4]
	_ = x[OMAP_KEYROLLING-8]
	_ = x[OMAP_CRYPTO_GENERATION-16]
}

const (
	_omapFlag_name_0 = "OMAP_MANUALLY_MANAGEDOMAP_ENCRYPTING"
	_omapFlag_name_1 = "OMAP_DECRYPTING"
	_omapFlag_name_2 = "OMAP_KEYROLLING"
	_omapFlag_name_3 = "OMAP_CRYPTO_GENERATION"
)

var (
	_omapFlag_index_0 = [...]uint8{0, 21, 36}
)

func (i omapFlag) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _omapFlag_name_0[_omapFlag_index_0[i]:_omapFlag_index_0[i+1]]
	case i == 4:
		return _omapFlag_name_1
	case i == 8:
		return _omapFlag_name_2
	case i == 16:
		return _omapFlag_name_3
	default:
		return "omapFlag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
