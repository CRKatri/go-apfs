// Code generated by "stringer -type=j_obj_types,j_obj_kinds,dir_rec_flags,mode_t,dir_ent_file_type,bsd_flags_t -output j_string.go"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[APFS_TYPE_ANY-0]
	_ = x[APFS_TYPE_SNAP_METADATA-1]
	_ = x[APFS_TYPE_EXTENT-2]
	_ = x[APFS_TYPE_INODE-3]
	_ = x[APFS_TYPE_XATTR-4]
	_ = x[APFS_TYPE_SIBLING_LINK-5]
	_ = x[APFS_TYPE_DSTREAM_ID-6]
	_ = x[APFS_TYPE_CRYPTO_STATE-7]
	_ = x[APFS_TYPE_FILE_EXTENT-8]
	_ = x[APFS_TYPE_DIR_REC-9]
	_ = x[APFS_TYPE_DIR_STATS-10]
	_ = x[APFS_TYPE_SNAP_NAME-11]
	_ = x[APFS_TYPE_SIBLING_MAP-12]
	_ = x[APFS_TYPE_FILE_INFO-13]
	_ = x[APFS_TYPE_MAX_VALID-13]
	_ = x[APFS_TYPE_MAX-15]
	_ = x[APFS_TYPE_INVALID-15]
}

const (
	_j_obj_types_name_0 = "APFS_TYPE_ANYAPFS_TYPE_SNAP_METADATAAPFS_TYPE_EXTENTAPFS_TYPE_INODEAPFS_TYPE_XATTRAPFS_TYPE_SIBLING_LINKAPFS_TYPE_DSTREAM_IDAPFS_TYPE_CRYPTO_STATEAPFS_TYPE_FILE_EXTENTAPFS_TYPE_DIR_RECAPFS_TYPE_DIR_STATSAPFS_TYPE_SNAP_NAMEAPFS_TYPE_SIBLING_MAPAPFS_TYPE_FILE_INFO"
	_j_obj_types_name_1 = "APFS_TYPE_MAX"
)

var (
	_j_obj_types_index_0 = [...]uint16{0, 13, 36, 52, 67, 82, 104, 124, 146, 167, 184, 203, 222, 243, 262}
)

func (i j_obj_types) String() string {
	switch {
	case i <= 13:
		return _j_obj_types_name_0[_j_obj_types_index_0[i]:_j_obj_types_index_0[i+1]]
	case i == 15:
		return _j_obj_types_name_1
	default:
		return "j_obj_types(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[APFS_KIND_ANY-0]
	_ = x[APFS_KIND_NEW-1]
	_ = x[APFS_KIND_UPDATE-2]
	_ = x[APFS_KIND_DEAD-3]
	_ = x[APFS_KIND_UPDATE_RECENT-4]
	_ = x[APFS_KIND_INVALID-255]
}

const (
	_j_obj_kinds_name_0 = "APFS_KIND_ANYAPFS_KIND_NEWAPFS_KIND_UPDATEAPFS_KIND_DEADAPFS_KIND_UPDATE_RECENT"
	_j_obj_kinds_name_1 = "APFS_KIND_INVALID"
)

var (
	_j_obj_kinds_index_0 = [...]uint8{0, 13, 26, 42, 56, 79}
)

func (i j_obj_kinds) String() string {
	switch {
	case i <= 4:
		return _j_obj_kinds_name_0[_j_obj_kinds_index_0[i]:_j_obj_kinds_index_0[i+1]]
	case i == 255:
		return _j_obj_kinds_name_1
	default:
		return "j_obj_kinds(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DREC_TYPE_MASK-15]
	_ = x[RESERVED_10-16]
}

const _dir_rec_flags_name = "DREC_TYPE_MASKRESERVED_10"

var _dir_rec_flags_index = [...]uint8{0, 14, 25}

func (i dir_rec_flags) String() string {
	i -= 15
	if i >= dir_rec_flags(len(_dir_rec_flags_index)-1) {
		return "dir_rec_flags(" + strconv.FormatInt(int64(i+15), 10) + ")"
	}
	return _dir_rec_flags_name[_dir_rec_flags_index[i]:_dir_rec_flags_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FIFO-4096]
	_ = x[CHR-8192]
	_ = x[DIR-16384]
	_ = x[BLK-24576]
	_ = x[REG-32768]
	_ = x[LNK-40960]
	_ = x[SOCK-49152]
	_ = x[WHT-57344]
}

const (
	_mode_t_name_0 = "FIFO"
	_mode_t_name_1 = "CHR"
	_mode_t_name_2 = "DIR"
	_mode_t_name_3 = "BLK"
	_mode_t_name_4 = "REG"
	_mode_t_name_5 = "LNK"
	_mode_t_name_6 = "SOCK"
	_mode_t_name_7 = "WHT"
)

func (i mode_t) String() string {
	switch {
	case i == 4096:
		return _mode_t_name_0
	case i == 8192:
		return _mode_t_name_1
	case i == 16384:
		return _mode_t_name_2
	case i == 24576:
		return _mode_t_name_3
	case i == 32768:
		return _mode_t_name_4
	case i == 40960:
		return _mode_t_name_5
	case i == 49152:
		return _mode_t_name_6
	case i == 57344:
		return _mode_t_name_7
	default:
		return "mode_t(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DT_UNKNOWN-0]
	_ = x[DT_FIFO-1]
	_ = x[DT_CHR-2]
	_ = x[DT_DIR-4]
	_ = x[DT_BLK-6]
	_ = x[DT_REG-8]
	_ = x[DT_LNK-10]
	_ = x[DT_SOCK-12]
	_ = x[DT_WHT-14]
}

const (
	_dir_ent_file_type_name_0 = "DT_UNKNOWNDT_FIFODT_CHR"
	_dir_ent_file_type_name_1 = "DT_DIR"
	_dir_ent_file_type_name_2 = "DT_BLK"
	_dir_ent_file_type_name_3 = "DT_REG"
	_dir_ent_file_type_name_4 = "DT_LNK"
	_dir_ent_file_type_name_5 = "DT_SOCK"
	_dir_ent_file_type_name_6 = "DT_WHT"
)

var (
	_dir_ent_file_type_index_0 = [...]uint8{0, 10, 17, 23}
)

func (i dir_ent_file_type) String() string {
	switch {
	case i <= 2:
		return _dir_ent_file_type_name_0[_dir_ent_file_type_index_0[i]:_dir_ent_file_type_index_0[i+1]]
	case i == 4:
		return _dir_ent_file_type_name_1
	case i == 6:
		return _dir_ent_file_type_name_2
	case i == 8:
		return _dir_ent_file_type_name_3
	case i == 10:
		return _dir_ent_file_type_name_4
	case i == 12:
		return _dir_ent_file_type_name_5
	case i == 14:
		return _dir_ent_file_type_name_6
	default:
		return "dir_ent_file_type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UF_SETTABLE-65535]
	_ = x[NONE-0]
	_ = x[NODUMP-1]
	_ = x[IMMUTABLE-2]
	_ = x[APPEND-4]
	_ = x[OPAQUE-8]
	_ = x[COMPRESSED-32]
	_ = x[TRACKED-64]
	_ = x[DATAVAULT-128]
	_ = x[HIDDEN-32768]
	_ = x[SF_SUPPORTED-10420224]
	_ = x[SF_SETTABLE-1073676288]
	_ = x[SF_SYNTHETIC-3221225472]
	_ = x[SF_ARCHIVED-65536]
	_ = x[SF_IMMUTABLE-131072]
	_ = x[SF_APPEND-262144]
	_ = x[SF_RESTRICTED-524288]
	_ = x[SF_NOUNLINK-1048576]
	_ = x[SF_FIRMLINK-8388608]
	_ = x[SF_DATALESS-1073741824]
}

const _bsd_flags_t_name = "NONENODUMPIMMUTABLEAPPENDOPAQUECOMPRESSEDTRACKEDDATAVAULTHIDDENUF_SETTABLESF_ARCHIVEDSF_IMMUTABLESF_APPENDSF_RESTRICTEDSF_NOUNLINKSF_FIRMLINKSF_SUPPORTEDSF_SETTABLESF_DATALESSSF_SYNTHETIC"

var _bsd_flags_t_map = map[bsd_flags_t]string{
	0:          _bsd_flags_t_name[0:4],
	1:          _bsd_flags_t_name[4:10],
	2:          _bsd_flags_t_name[10:19],
	4:          _bsd_flags_t_name[19:25],
	8:          _bsd_flags_t_name[25:31],
	32:         _bsd_flags_t_name[31:41],
	64:         _bsd_flags_t_name[41:48],
	128:        _bsd_flags_t_name[48:57],
	32768:      _bsd_flags_t_name[57:63],
	65535:      _bsd_flags_t_name[63:74],
	65536:      _bsd_flags_t_name[74:85],
	131072:     _bsd_flags_t_name[85:97],
	262144:     _bsd_flags_t_name[97:106],
	524288:     _bsd_flags_t_name[106:119],
	1048576:    _bsd_flags_t_name[119:130],
	8388608:    _bsd_flags_t_name[130:141],
	10420224:   _bsd_flags_t_name[141:153],
	1073676288: _bsd_flags_t_name[153:164],
	1073741824: _bsd_flags_t_name[164:175],
	3221225472: _bsd_flags_t_name[175:187],
}

func (i bsd_flags_t) String() string {
	if str, ok := _bsd_flags_t_map[i]; ok {
		return str
	}
	return "bsd_flags_t(" + strconv.FormatInt(int64(i), 10) + ")"
}
