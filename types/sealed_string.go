// Code generated by "stringer -type=j_obj_file_info_type,apfs_hash_type_t -output sealed_string.go"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[APFS_FILE_INFO_DATA_HASH-1]
}

const _j_obj_file_info_type_name = "APFS_FILE_INFO_DATA_HASH"

var _j_obj_file_info_type_index = [...]uint8{0, 24}

func (i j_obj_file_info_type) String() string {
	i -= 1
	if i >= j_obj_file_info_type(len(_j_obj_file_info_type_index)-1) {
		return "j_obj_file_info_type(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _j_obj_file_info_type_name[_j_obj_file_info_type_index[i]:_j_obj_file_info_type_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[APFS_HASH_INVALID-0]
	_ = x[APFS_HASH_SHA256-1]
	_ = x[APFS_HASH_SHA512_256-2]
	_ = x[APFS_HASH_SHA384-3]
	_ = x[APFS_HASH_SHA512-4]
	_ = x[APFS_HASH_MIN-1]
	_ = x[APFS_HASH_MAX-4]
	_ = x[APFS_HASH_DEFAULT-1]
}

const _apfs_hash_type_t_name = "APFS_HASH_INVALIDAPFS_HASH_SHA256APFS_HASH_SHA512_256APFS_HASH_SHA384APFS_HASH_SHA512"

var _apfs_hash_type_t_index = [...]uint8{0, 17, 33, 53, 69, 85}

func (i apfs_hash_type_t) String() string {
	if i >= apfs_hash_type_t(len(_apfs_hash_type_t_index)-1) {
		return "apfs_hash_type_t(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _apfs_hash_type_t_name[_apfs_hash_type_t_index[i]:_apfs_hash_type_t_index[i+1]]
}
